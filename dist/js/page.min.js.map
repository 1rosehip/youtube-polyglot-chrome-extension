{"version":3,"file":"page.min.js","sources":["../../src/js/page/services/data-service.jsx","../../src/js/page/page.jsx","../../src/js/page/index.jsx"],"sourcesContent":["class DataService{\n\n    /**\n     * get available languages\n     * @param {Function=} done\n     * @param {Function=} err\n     * @param {string} youtubeID\n     */\n    getAvailableLangs(done, err, youtubeID){\n\n        let url = 'https://video.google.com/timedtext?type=list&v=' + youtubeID;\n\n        //disable cache\n        var myHeaders = new Headers({\n            //'Access-Control-Allow-Origin':'*',\n            //'Content-Type': 'multipart/form-data'\n            'content-type': 'application/json'\n        });\n\n        //myHeaders.append('pragma', 'no-cache');\n        //myHeaders.append('cache-control', 'no-cache');\n\n        fetch(url, {\n            method: 'GET',\n            mode: 'cors',\n            //headers: myHeaders,\n            //credentials: 'omit' //'same-origin', 'include', 'omit'\n        })\n            //.then(res => res.json())\n            .then(data => {\n                console.log(data);\n                done(data);\n            })\n            .catch(function(err) {\n                console.log('Youtube Extenstion - getAvailableLangs:', err);\n                err();\n            });\n    }\n}\n\nexport default new DataService();","import { h } from 'preact';\nimport dataService from './services/data-service.jsx';\n\n/**\n * Page component - the main component of extension.\n * Created: 02/12/2018\n * Usage:\n *          <Page\n *              youtubeID=\"nHN92cVgmm0\"\n *          />\n */\nexport default class Page extends React.Component{\n\n    /**\n     * @constructor\n     * @param props\n     */\n    constructor(props){\n        super(props);\n\n        this.state = {\n\n            /* reponse from https://video.google.com/timedtext?type=list&v=... */\n            availableLangs: null\n        };\n    }\n\n    /**\n     * componentDidMount() is invoked immediately after a component is mounted.\n     * Initialization that requires DOM nodes should go here.\n     * If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n     */\n    componentDidMount() {\n\n        console.log('componentDidMount');\n        /**\n         * get available languages\n         */\n        dataService.getAvailableLangs(\n\n            (availableLangs) => {\n                this.setState({\n                    availableLangs: availableLangs\n                });\n            },\n            (err) => {},\n            this.props.youtubeID\n        );\n    }\n\n    /**\n     * render the component\n     * @return {string}\n     */\n    render(){\n\n        console.log(this.state.availableLangs);\n        return (\n            <div>TEST</div>\n        );\n    }\n}\n\nPage.propTypes = {\n    youtubeID: PropTypes.string\n};","import { h } from 'preact';\nimport Page from './page.jsx';\n\n/* ========================= GLOBALS ========================= */\nlet loadTries = 0;\nconst LOAD_TRIES_MAX = 10;\nconst loadStep = 1000;\n\n/**\n * check if the page is already available\n * @param {Function} callback\n */\nconst checkIfPageAvailable = (callback) => {\n\n    const info = document.getElementById('info');\n\n    if(info){\n        callback(true);\n    }\n    else{\n        if(loadTries < LOAD_TRIES_MAX){\n\n            window.setTimeout(function(){\n\n                loadTries++;\n\n                checkIfPageAvailable(callback);\n            }, loadStep);\n        }\n        else{\n            callback(false);\n        }\n    }\n};\n\n/**\n * get query string params\n * @param {string} name\n * @param {string} url\n * @returns {*}\n * Usage:\n * query string: ?foo=lorem&bar=&baz\n * var foo = getParameterByName('foo'); // \"lorem\"\n * var bar = getParameterByName('bar'); // \"\" (present with empty value)\n * var baz = getParameterByName('baz'); // \"\" (present with no value)\n * var qux = getParameterByName('qux'); // null (absent)\n */\nconst getParameterByName = (name, url) => {\n\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n};\n\n/**\n * on window load\n */\nwindow.onload = () => {\n\n    //chrome.storage.sync.clear();\n    //chrome.storage.local.clear();\n\n    /**\n     * param {boolean} isAvailable\n     */\n    checkIfPageAvailable(function(isAvailable){\n\n        if(isAvailable){\n\n            var youtubeID = getParameterByName('v');\n\n            if(youtubeID) {\n\n                const related = document.getElementById('related');\n                const page = document.createElement('div');\n                related.insertBefore(page, related.firstChild);\n\n                window.wishlist = ReactDOM.render(\n                    <Page youtubeID={youtubeID} />,\n                    page\n                );\n            }\n        }\n    });\n\n\n};"],"names":["done","err","youtubeID","url","Headers","then","log","data","catch","Page","props","state","React","Component","getAvailableLangs","availableLangs","setState","this","h","propTypes","PropTypes","string","loadTries","window","onload","checkIfPageAvailable","callback","document","getElementById","setTimeout","isAvailable","name","location","href","replace","results","RegExp","exec","decodeURIComponent","getParameterByName","related","page","createElement","insertBefore","firstChild","wishlist","ReactDOM","render"],"mappings":"whBAwCe,0FAhCOA,EAAMC,EAAKC,OAErBC,EAAM,kDAAoDD,EAG9C,IAAIE,wBAGA,2BAMdD,UACM,WACF,SAKLE,KAAK,oBACMC,IAAIC,KACPA,KAERC,MAAM,SAASP,WACJK,IAAI,0CAA2CL,mBCvBlDQ,yBAMLC,4EACFA,aAEDC,sBAGe,2UAZMC,MAAMC,6EAuBxBP,IAAI,uBAIAQ,kBAER,SAACC,KACQC,yBACeD,KAGxB,SAACd,KACDgB,KAAKP,MAAMR,2DAUPI,IAAIW,KAAKN,MAAMI,gBAEnBG,kCAKPC,qBACUC,UAAUC,QC5DzB,IAAIC,EAAY,EAyDhBC,OAAOC,OAAS,YAjDa,SAAvBC,EAAwBC,GAEbC,SAASC,eAAe,WAGxB,GAGNN,EAfY,UAiBJO,WAAW,iBAIOH,IApBpB,QAwBI,IAuCI,SAASI,MAEvBA,EAAY,KAEP5B,EA1BW,SAAC6B,EAAM5B,GAEzBA,IAAKA,EAAMoB,OAAOS,SAASC,QACzBF,EAAKG,QAAQ,UAAW,YAE3BC,EADQ,IAAIC,OAAO,OAASL,EAAO,qBACnBM,KAAKlC,UACpBgC,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,KAoBGK,CAAmB,QAEhCrC,EAAW,KAEJsC,EAAUb,SAASC,eAAe,WAClCa,EAAOd,SAASe,cAAc,SAC5BC,aAAaF,EAAMD,EAAQI,mBAE5BC,SAAWC,SAASC,OACvB7B,IAACT,GAAKP,UAAWA,IACjBuC"}